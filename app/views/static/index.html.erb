  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>LA Rental price heatmap</title>
    
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdacxIPLBmGeowW3ICo1quEftRP7DbA2k"></script>
    <script>
    var map, heatmap, myData, maxCrime, minCrime, allCrime = [], testData2 = [];

    myData = httpGet("http://localhost:3000/neighborhoods.json");
    myData = JSON.parse(myData);
    console.log(myData[0]);

    function initialize() {
      var mapCenter = new google.maps.LatLng(-34.397, 150.644);
      var mapOptions = {
        zoom: 12,
        center: mapCenter,
        mapTypeId: google.maps.MapTypeId.SATELLITE
      };

      map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
      var markerCoords = [];

      // Load up an array with object literal lat lng and weight values
      myData.forEach(function( each,count ) {
        markerCoords.push({ lat: parseFloat( each.Latitude ),
          lng: parseFloat( each.Longitude ),
          weight: parseFloat( each.AvgRentPrice )});
        map.setCenter (markerCoords[count] );
      });// myData.forEach

    // Create an array of weighted Latlng objects using avg rent as the weight
    for (i = 0; i < myData.length; i++){
      testData2[i] = {
        location: new google.maps.LatLng(myData[i].Latitude, myData[i].Longitude), 
        weight: parseFloat(myData[i].ViolentCrimePer10kCapita)
      };
      // Gather the rents in one place, as long as they are in the data
      testData2[i].weight ? allCrime.push(testData2[i].weight) : null;
    }
    
    // Find the highest and lowest violent crime rates
    maxCrime = Math.max.apply(null, allCrime);
    minCrime = Math.min.apply(null, allCrime);

  // Pull geoJSON for the neighborhood outlines from the variable in zillow.js
  map.data.addGeoJson(myGJ);
  map.data.setStyle({strokeWeight: 1});

  // This makes the map responsive to the mouse movement
   map.data.addListener('mouseover', function(event) {
      map.data.overrideStyle(event.feature, {strokeWeight: 2, strokeColor: 'cyan', zIndex: 999});
   });
   map.data.addListener('mouseout', function(event) {
      map.data.overrideStyle(event.feature, {strokeWeight: 1, strokeColor: 'black', zIndex: 0});
   }); 

// Set the neighborhood polygon styles appropriat
  map.data.forEach(function(feature) { 
    //var opacity =
    //myData.filter(function(obj){
    //   return obj.RegionName === feature.getProperty('NAME') ? obj.AvgRentPrice/maxRent : false;
    // });
    map.data.overrideStyle(feature, {fillOpacity: 1}) 
    console.log(opacity);
  });
//map.data.overrideStyle(feature, {fillColor: )
      //feature.forEachProperty(function(value,property){
        //console.log(property,':',value);
  }// Initialize


  function httpGet(targetURL) {
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", targetURL, false );
    xmlHttp.send( null );
    return xmlHttp.responseText;
  }


  function hideNeighborhoods() {
    map.data.getMap() ? map.data.setMap(null): map.data.setMap(map);
  }

  google.maps.event.addDomListener(window, 'load', initialize);
  </script>
  </head>
  <body>
    <div id="panel">
      <input type="button" value="Hide" onclick="hideNeighborhoods()">
    </div>
    <div id="map-canvas"></div>
  </body>
  </html>